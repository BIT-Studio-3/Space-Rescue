name: Create Build and Release

on:
    pull_request:
        types:
            - closed
        branches:
            - main

jobs:
    build-project:
        name: Build my Project
        runs-on: ubuntu-latest
        steps:
            - name: Check if the pull request was merged #This Step Is Checking whether the linked PR was merged into main and not just closed
              id: check_merge
              run: |
                if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
                    echo "Pull request was merged!"
                else
                    echo "Error: Pull request to main branch was closed but not merged."
                    exit 1
                fi
            # Checkout
            - name: Checkout Repo #Checkouts to the Repository
              uses: actions/checkout@v3
              with:
                lfs: true # Whether to download Git-LFS files 

            # Cache 
            - name: Cache Files #Cache un-needed files, significantly reduces build time
              uses: actions/cache@v3
              with:
                path: Library
                key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
                restore-keys: |
                  Library-
      
            # Build
            - name: Build Project #Builds the unity Project
              uses: game-ci/unity-builder@v2
              env:
                UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }} #Explained in Wiki, required for validation and to build the project
                UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
              with:
                targetPlatform: StandaloneWindows
                allowDirtyBuild: true #Allows the build to modify the repo, I had to enable this for the workflow to run
                buildName: SpaceRescue

            # Upload Artifact
            - uses: actions/upload-artifact@v3 #Uploads files in specified path that can be used in later jobs
              with:
                name: build #the name of the artifact is build
                path: build/StandaloneWindows

        #Between the two jobs, the 'runner' clears the directory and is starting blank again
    
    release-project:
        name: Release Project
        runs-on: ubuntu-latest
        needs: build-project #Ensures that the release job will only run when the build job is successful
        steps:
            - uses: actions/download-artifact@v3
              id: download
              with:
                name: build #the name is required to specify which artifact is needed



